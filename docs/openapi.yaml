openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - url: https://kokoichi0206.mydns.jp/api/v1/
    description: Raspberry Pi Server
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/kokoichi206/Sakamichi/1.0.0

info:
  description: This is a simple API
  version: "1.0.0"
  title: Sakamichi API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /members:
    get:
      summary: searches members
      operationId: searchMembers
      description: |
        ## By passing the appropriate query parameter, you can get information about members.
      parameters:
        - in: query
          name: gn
          description: Group Name for searching members
          required: true
          schema:
            type: string
        - in: query
          name: key
          description: API key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/Member'
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "group name does not exist"
        '403':
          description: wrong or no api key
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "No valid api key"
        '500':
          description: internal server error
      tags:
        - developers
  /blogs:
    get:
      summary: searches blogs
      operationId: searchBlogs
      description: |
        ## By passing the appropriate query parameter, you can get information about blogs.
      parameters:
        - in: query
          name: gn
          description: Group Name for searching blogs
          required: true
          schema:
            type: string
        - in: query
          name: key
          description: API key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  blogs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Blog'
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "group name does not exist"
        '403':
          description: wrong or no api key
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "No valid api key"
        '500':
          description: internal server error
      tags:
        - developers
  /positions:
    get:
      summary: searches positions
      operationId: searchPositions
      description: |
        ## By passing the appropriate query parameter, you can get information about positions.
      parameters:
        - in: query
          name: title
          description: Song title
          required: true
          schema:
            type: string
        - in: query
          name: key
          description: API key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                properties:
                  positions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Position'
                type: object
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Invalid title"
        '403':
          description: wrong or no api key
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "No valid api key"
        '500':
          description: internal server error
      tags:
        - developers
  /songs:
    get:
      summary: searches inventory
      operationId: getAllSongs
      description: |
        Brief information of All songs
      parameters:
        - in: query
          name: gn
          description: pass the group name
          required: true
          schema:
            type: string
        - in: query
          name: key
          description: API key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                properties:
                  songs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Song'
                type: object
        '400':
          description: bad input parameter
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "Invalid group name"
        '403':
          description: wrong or no api key
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  error:
                    type: "string"
                    example: "No valid api key"
        '500':
          description: internal server error
      tags:
        - developers
components:
  schemas:
    Member:
      type: object
      required:
        - id
        - name
        - manufacturer
        - releaseDate
      properties:
        id:
          type: integer
          format: id
          example: 4
        name:
          type: string
          example: 岩本 蓮加
        birthday:
          type: string
          example: 2004年2月2日
        generation:
          type: string
          example: 3期生
        height:
          type: string
          example: 159cm
        blood_type:
          type: string
          example: B型
        blog_url:
          type: string
          example: https://blog.nogizaka46.com/renka.iwamoto
        img_url:
          type: string
          example: https://kokoichi0206.mydns.jp/imgs/nogi/iwamotorenka.jpeg
    Blog:
      properties:
        name:
          type: string
          example: 伊藤 理々杏
        blog_url:
          type: string
          example: https://blog.nogizaka46.com/riria.itou
        last_blog_img:
          type: string
          example: https://kokoichi0206.mydns.jp/imgs/nogi/iwamotorenka.jpeg
        last_updated_at:
          type: string
          example: 2021/10/08 17:24
      type: object
    Position:
      properties:
        member_name:
          type: string
          example: '小坂菜緒'
        position:
          type: string
          example: '003'
        img_url:
          type: string
          example: https://kokoichi0206.mydns.jp/imgs/nogi/iwamotorenka.jpeg
        is_center:
          type: boolean
          example: true
      type: object
    Song:
      properties:
        single:
          type: string
          example: '6th'
        title:
          type: string
          example: 'ってか'
        center:
          type: string
          example: '金村美玖'
      type: object